# Jadapi API Nginx Configuration
# This configuration proxies /api requests to the Node.js server on port 4001

# Upstream configuration for the API server (Docker container)
upstream jadapi_backend {
    server 127.0.0.1:5000;
    keepalive 64;
}

# Upstream configuration for the frontend (Docker container)
upstream jadapi_frontend {
    server 127.0.0.1:3000;
    keepalive 64;
}

# HTTP Server Configuration
server {
    listen 80;
    listen [::]:80;

    # Server name - change this when you have a domain
    server_name _;  # Catch-all, replace with your domain later

    # General settings
    client_max_body_size 50M;

    # Logging
    access_log /var/log/nginx/jadapi-access.log;
    error_log /var/log/nginx/jadapi-error.log;

    # API endpoint
    location /api {
        # Remove /api prefix when forwarding to backend
        rewrite ^/api/(.*)$ /$1 break;

        # Proxy settings
        proxy_pass http://jadapi_backend;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffering
        proxy_buffering off;
        proxy_cache_bypass $http_upgrade;
    }

    # Health check endpoint (optional)
    location /api/health {
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://jadapi_backend;
        access_log off;
    }

    # Frontend (Next.js) - serve on /
    location / {
        proxy_pass http://jadapi_frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
    }

    # Next.js static files
    location /_next/static {
        proxy_pass http://jadapi_frontend;
        proxy_cache_valid 200 60m;
        add_header Cache-Control "public, max-age=3600, immutable";
    }

    location /_next/image {
        proxy_pass http://jadapi_frontend;
        proxy_cache_valid 200 24h;
    }
}

# HTTPS Server Configuration (uncomment when you have SSL certificates)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#
#     server_name your-domain.com;  # Change to your domain
#
#     # SSL Certificate paths (update with your certificate paths)
#     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#
#     # SSL Settings
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # Same configuration as HTTP server
#     client_max_body_size 50M;
#     access_log /var/log/nginx/jadapi-ssl-access.log;
#     error_log /var/log/nginx/jadapi-ssl-error.log;
#
#     location /api {
#         rewrite ^/api/(.*)$ /$1 break;
#         proxy_pass http://jadapi_backend;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#         proxy_buffering off;
#         proxy_cache_bypass $http_upgrade;
#     }
#
#     location / {
#         return 200 'Jadapi API Server - Use /api endpoint';
#         add_header Content-Type text/plain;
#     }
# }
